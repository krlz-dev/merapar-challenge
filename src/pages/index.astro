---
import fs from 'fs';
import path from 'path';

let dynamicString = "default dynamic string";

try {
  const dataPath = path.join(process.cwd(), 'src/data/text.json');
  const data = JSON.parse(fs.readFileSync(dataPath, 'utf-8'));
  dynamicString = data.dynamicString || dynamicString;
} catch (error) {
  console.error('Error reading dynamic text:', error);
}
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>Dynamic Text</title>
		<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
		<style>
			#dynamicText {
				font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;
				font-weight: 100;
				color: #666666;
				font-size: 2.5rem;
				letter-spacing: -0.02em;
			}
		</style>
	</head>
	<body>
	 
		<div class="container mt-5">
			<div class="row justify-content-center">
				<div class="col-md-8">
					<div class="text-center">
						<h1 id="dynamicText">The saved string is {dynamicString}</h1>
					</div>
				</div>
			</div>
		</div>
		
		<script>
			// Server-Sent Events connection for real-time updates
			let eventSource;
			const dynamicTextElement = document.getElementById('dynamicText');
			
			function connectSSE() {
				eventSource = new EventSource('/events');
				
				eventSource.onmessage = function(event) {
					try {
						const data = JSON.parse(event.data);
						if (data.dynamicString) {
							dynamicTextElement.textContent = `The saved string is ${data.dynamicString}`;
						}
					} catch (error) {
						console.error('Error parsing SSE data:', error);
					}
				};
				
				eventSource.onerror = function() {
					// Attempt to reconnect after 3 seconds
					setTimeout(() => {
						connectSSE();
					}, 3000);
				};
			}
			
			// Start SSE connection
			connectSSE();
			
			// Clean up SSE connection when page unloads
			window.addEventListener('beforeunload', function() {
				if (eventSource) {
					eventSource.close();
				}
			});
		</script>
	</body>
</html>
